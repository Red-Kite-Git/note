###String类：    java.lang.String

String.length(String str)   //返回字符串的长度
str1.equals(String str2)    //比较两个字符串的内容是否相同
str1.equalsIgnoreCase(String str2)     //比较两个字符串的内容是否相同，忽略大小写
str1.toLowerCase()     //将字符串中的大写字母转换为小写字母
str1.toUpperCase()     //将字符串中的小写字母转换为大写字母

  字符串的拼接：
    1. " " + " " ：拼接字符串
    2. str1.concat(String str2)    //返回 str1+str2
    3. String.format(String str)    //使用占位符拼接字符串

String.indexOf(String str)      //从头（0）开始到尾（length()-1）找 ，返回指定字符在字符串中第一次出现的位置，如果不存在，返回-1
String.lastIndexOf(String str)  //从尾（length()-1）开始到头（0）找，返回指定字符在字符串中最后一次出现的位置，如果不存在，返回-1

String indexOf(String str,int start)    //返回指定字符串在字符串中从start位置开始到结尾第一次出现的位置

String.substring(beginIndex,endIndex)   //截取字符串，返回截取后的字符串截取字符串
//从beginIndex开始，到endIndex结束   /*包含beginIndex但不包括endIndex  endIndex不写默认直到结尾全部

String.trim()   //去除字符串两端的空格

String.charAt(index)    //返回指定索引处的字符

str1.split(regex)   //根据 正则表达式regex 拆分字符串，返回拆分后的 字符串数组  /* regex=""时，返回的是每一个字符构成元素的字符串数组

str.replace(CharSequence target,CharSequence replacement)   //将字符串中的target替换成replacement，返回替换后的字符串


###StringBuffer类: java.lang.StringBuffer类

由于字符串是存储在数组中，使用String类频繁拼接字符串会浪费内存
所以可以使用StringBuffer类类来拼接字符串可以提升效率

StringBuffer类 sb = new StringBuffer类(str);
//将str转成StringBuffer类对象  StringBuffer对象是可变字符串

sb.append(String str)   //将字符串拼接到sb中
sb.insert(int index,String str)    //在指定位置插入字符串
sb.delete(int start,int end)    //删除指定位置之间的字符串
sb.reverse()    //将字符串反转
sb.toString()   //将StringBuffer类对象转换为String对象  /* System.out.print(sb)时已经做了处理，不需要sb.toString

