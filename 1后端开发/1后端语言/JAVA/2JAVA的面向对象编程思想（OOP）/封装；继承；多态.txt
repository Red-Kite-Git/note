###一.封装
1.概念/意义
将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问

大致步骤：
修改属性的权限，设为private，防止错误的修改
创建公有的public方法，用于属性的读写
可以加入对属性值的合法性判断的语句

便于使用者正确使用系统，防止错误修改属性
有助于系统之间的松耦合，提高系统独立性
提高软件的可重用性
降低了构建大型系统的风险

2.权限声明
  public： 允许本项目所有访问
  private： 只允许本类访问
  protected： 只允许本类、同包和子类访问
  [default]： 允许本类和同包访问

|           | 同类 |  同包  |  子类  | 任何地方 |
| :-------: | :--: | :----: | :----: | :------: |
|  private  | 可以 | 不可以 | 不可以 |          |
| [default] | 可以 |  可以  | 不可以 |          |
| protected | 可以 |  可以  |  可以  |          |
|  public   | 可以 |  可以  |  可以  |          |

3.static修饰符
static 成员变量     ==> 静态变量，可以直接通过类名访问
static 成员方法     ==>静态方法，可以直接通过类名访问
static 代码块       ==>静态代码块，当Java虚拟机加载类时，就会执行该代码块

静态代码块
static{
    //代码块
}
//静态代码块在类加载时执行，且只执行一次
//静态代码块可以用来初始化一些东西（比如把文件中的数据加载到内存中，程序启动后只执行一次）
//静态代码块可以用来加载配置文件

###二.继承
1.概念/意义
重复的代码提取到父类，优化代码设计

父类：
    [访问修饰符] class 父类名 {
        //公共的属性和方法
    }
子类：
    [访问修饰符] class 子类名 extends 父类名 {
        //子类特有的属性和方法
    }

继承是Java中实现代码重用的重要手段之一。Java中只支持单根继承，即一个类只能有一个直接父类

###三.多态
1.概念/意义
