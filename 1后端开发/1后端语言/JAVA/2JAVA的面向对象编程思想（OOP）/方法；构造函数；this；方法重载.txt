###1.带参方法
    方法定义：
    <访问修饰符>  返回类型  <方法名>(形参列表) {
            //方法的主体
    }

    方法调用：
    对象名.方法名(实参列表)

//方法定义处的参数叫形式参数（形参），方法调用处传的值叫实际参数（实参）
//带参方法，参数个数可以有一个，也可以有多个，多个参数之间用逗号隔开
//带参方法，参数名字可以随意取，符合变量命名规则
//形参和实参名字可以不一样，但是数据的  类型、个数、顺序要一样
//方法有没有参数和方法有没有返回值，毫无关系


###2.方法传参
基本数据类型：传递的是变量的值，改变一个变量的值不会影响另一个变量的值
引用数据类型（类、数组和接口）：赋值是把原对象的引用（可理解为内存地址）传递给另一个引用


###3.构造函数/方法

类中没有构造函数时，会默认分配一个隐式无参构造函数

无参构造方法：
    //构造方法名与类名必须相同
    访问修饰符 构造方法名 () {
        //初始化代码
    }
//无返回值类型
//系统提供默认无参构造方法，可以指定参数

自定义带参构造方法：
自定义带参构造方法后，系统将不再提供默认无参构造方法


###4.this关键字
如果有成员变量名和局部变量名相同，系统会默认优先使用局部变量名
在变量前加上.this可以区分两个不同的变量，代指当前对象

this();  用来调用本类中的无参构造函数，只能写在第一行

this(nickName, sex);  也可以加入参数，调用其他有参构造函数,也只能写在第一行

this.属性名称  表示：某个对象调用这个方法，这个属性就是某个对象的


###5.方法重载
    带参构造方法1：
    <访问修饰符> 构造方法名 (形参列表1) {
        //代码
    }
    带参构造方法2：
    <访问修饰符> 构造方法名 (形参列表2) {
            //代码
    }
//两同一不同：同一个类中，方法名相同，参数项不同
//与返回值、访问修饰符、方法代码块无关


###6.成员变量和局部变量
作用域不同
  局部变量的作用域仅限于定义它的方法
  成员变量的作用域在整个类内部都是可见的
初始值不同
  Java会给成员变量一个初始值
  Java不会给局部变量赋予初始值
在同一个方法中，不允许有同名局部变量
在不同的方法中，可以有同名局部变量
在同一个类中，成员变量和局部变量同名时，局部变量具有更高的优先级
